package test.pkg.intl;

import jsinterop.annotations.JsMethod;
import jsinterop.annotations.JsOverlay;
import jsinterop.annotations.JsType;

@JsType(isNative=true,name="Test")
public interface Test
{
@JsMethod(name="method")
<K extends Node,T extends Node> void method(K a, T b);
@JsOverlay
public static double doIt(com.user00.domjnate.api.WindowOrWorkerGlobalScope _win) {
  return com.user00.domjnate.util.Js.callStaticMethod(_win, "Test", "doIt", double.class);
}
@JsOverlay
public static Test _new(com.user00.domjnate.api.WindowOrWorkerGlobalScope _win) {
  java.lang.Object constructor = com.user00.domjnate.util.Js.getConstructor(_win, "Test");
  return com.user00.domjnate.util.Js.construct(_win, constructor, Test.class);
}
}
