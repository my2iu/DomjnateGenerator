package test.pkg;

import jsinterop.annotations.JsFunction;
import jsinterop.annotations.JsMethod;
import jsinterop.annotations.JsOverlay;
import jsinterop.annotations.JsType;

@JsType(isNative=true,name="GenericIntf")
public interface GenericIntf<T,Z extends Node> 
{
@JsMethod(name="methodCallbackGeneric")
<S> void methodCallbackGeneric(MethodCallbackGenericCallback<S, Z> a);
@JsOverlay
public default Z get(double idx, Class<Z> _type) {
  return (Z)com.user00.domjnate.util.Js.getIndex(this, idx, _type);
}
@JsOverlay
public default void set(double idx, Z val) {
  com.user00.domjnate.util.Js.setIndex(this, idx, val);
}
@JsFunction public static interface MethodCallbackGenericCallback<S,Z extends Node> 
{
S apply(Z b);
}
@JsOverlay
public static GenericIntf<Double, Node> getA(com.user00.domjnate.api.WindowOrWorkerGlobalScope _win) {
  java.lang.Object obj = com.user00.domjnate.util.Js.getMember(_win, "GenericIntf", com.user00.domjnate.util.EmptyInterface.class);
  return com.user00.domjnate.util.Js.getMember(obj, "a", GenericIntf.class);
}
@JsOverlay
public static void setA(com.user00.domjnate.api.WindowOrWorkerGlobalScope _win, GenericIntf<Double, Node> val) {
  java.lang.Object obj = com.user00.domjnate.util.Js.getMember(_win, "GenericIntf", com.user00.domjnate.util.EmptyInterface.class);
  com.user00.domjnate.util.Js.setMember(obj, "a", val);
}
@JsOverlay
public static GenericIntf<String, Node> make(com.user00.domjnate.api.WindowOrWorkerGlobalScope _win) {
  return com.user00.domjnate.util.Js.callStaticMethod(_win, "GenericIntf", "make", GenericIntf.class);
}
@JsOverlay
public static Array<GenericIntf<String, Node>> makeArr(com.user00.domjnate.api.WindowOrWorkerGlobalScope _win) {
  return com.user00.domjnate.util.Js.callStaticMethod(_win, "GenericIntf", "makeArr", Array.class);
}
@JsOverlay
public static <U> U create(com.user00.domjnate.api.WindowOrWorkerGlobalScope _win, Class<U> _type) {
  return com.user00.domjnate.util.Js.callStaticMethod(_win, "GenericIntf", "create", _type);
}
@JsOverlay
public static <T,Z> GenericIntf<T, Z> call(com.user00.domjnate.api.WindowOrWorkerGlobalScope _win) {
  return com.user00.domjnate.util.Js.callMethod(_win, "GenericIntf", GenericIntf.class);
}
@JsOverlay
public static <T,Z> GenericIntf<T, Z> _new(com.user00.domjnate.api.WindowOrWorkerGlobalScope _win) {
  java.lang.Object constructor = com.user00.domjnate.util.Js.getConstructor(_win, "GenericIntf");
  return com.user00.domjnate.util.Js.construct(_win, constructor, GenericIntf.class);
}
}
