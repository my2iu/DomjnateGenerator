package test.pkg;

import jsinterop.annotations.JsOverlay;
import jsinterop.annotations.JsType;

@JsType(isNative=true,name="Test2")
public interface Test2
{
@JsOverlay
public static Node getPrototype(com.user00.domjnate.api.WindowOrWorkerGlobalScope _win) {
  com.user00.domjnate.api.Object obj = com.user00.domjnate.util.Js.getMember(_win, "Test2", com.user00.domjnate.api.Object.class);
  return com.user00.domjnate.util.Js.getMember(obj, "prototype", Node.class);
}
@JsOverlay
public static void setPrototype(com.user00.domjnate.api.WindowOrWorkerGlobalScope _win, Node val) {
  com.user00.domjnate.api.Object obj = com.user00.domjnate.util.Js.getMember(_win, "Test2", com.user00.domjnate.api.Object.class);
  com.user00.domjnate.util.Js.setMember(obj, "prototype", val);
}
@JsOverlay
public static Test2 _new(com.user00.domjnate.api.WindowOrWorkerGlobalScope _win) {
  java.lang.Object constructor = com.user00.domjnate.util.Js.getConstructor(_win, "Test2");
  return com.user00.domjnate.util.Js.construct(_win, constructor, Test2.class);
}
@JsOverlay
public static Test2 _new(com.user00.domjnate.api.WindowOrWorkerGlobalScope _win, double a, double... c) {
  java.lang.Object constructor = com.user00.domjnate.util.Js.getConstructor(_win, "Test2");
  return com.user00.domjnate.util.Js.construct(_win, constructor, Test2.class, a, ... c);
}
@JsOverlay
public static Test2 _new(com.user00.domjnate.api.WindowOrWorkerGlobalScope _win, double a, String b, double... c) {
  java.lang.Object constructor = com.user00.domjnate.util.Js.getConstructor(_win, "Test2");
  return com.user00.domjnate.util.Js.construct(_win, constructor, Test2.class, a, b, ... c);
}
}
